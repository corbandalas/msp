# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Swagger Stuff

GET        /api-docs              @pl.matisoft.swagger.ApiHelpController.getResources
GET        /swagger               @controllers.SwaggerController.swagger()

# Index
GET     /                           @controllers.Application.index

# Property API
GET        /api-docs/api/property      @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/property")

POST       /api/property/create                                          @controllers.PropertyController.create()

POST       /api/property/update                                          @controllers.PropertyController.update()

GET        /api/property/list                                            @controllers.PropertyController.retrieveAll()

GET        /api/property/get/:propertyID                                 @controllers.PropertyController.retrieveByID(propertyID)

# Currency API
GET        /api-docs/api/currency      @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/currency")

GET       /api/currency/list                                             @controllers.CurrencyController.retrieveAll()

GET       /api/currency/get/:currencyID                                  @controllers.CurrencyController.retrieveByID(currencyID)

POST      /api/currency/update                                           @controllers.CurrencyController.update()

GET       /api/currency/exchange/:amount/:fromCurrencyID/:toCurrencyID   @controllers.CurrencyController.exchange(amount: Long, fromCurrencyID, toCurrencyID)

# Country API
GET        /api-docs/api/country      @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/country")

GET       /api/country/list                                             @controllers.CountryController.retrieveAll()

GET       /api/country/get/:countryID                                  @controllers.CountryController.retrieveByID(countryID)

POST      /api/country/update                                          @controllers.CountryController.update()

# ExchangeRateHistory API
GET       /api-docs/api/exchangeRateHistory      @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/exchangeRateHistory")

GET       /api/exchangeRateHistory/get/:currencyID                      @controllers.ExchangeRateHistoryController.retrieveByCurrencyID(currencyID)

# Account API
GET     /api-docs/api/account                                           @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/account")
POST    /api/account/create                                             @controllers.AccountController.create()
POST    /api/account/update                                             @controllers.AccountController.update()
GET     /api/account/get/:accountID                                     @controllers.AccountController.retrieveById(accountID:Int)
GET     /api/account/list                                               @controllers.AccountController.retrieveAll()

# Operation API
GET     /api-docs/api/operation                                         @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/operation")
POST    /api/operation/create                                           @controllers.OperationController.create()
POST    /api/operation/update                                           @controllers.OperationController.update()
GET     /api/operation/get/:operationID                                 @controllers.OperationController.retrieveById(operationID:Int)
GET     /api/operation/list                                             @controllers.OperationController.retrieveAll()
POST    /api/operation/list/filtered                                    @controllers.OperationController.retrieveFiltered()

# Transaction API
GET     /api-docs/api/transaction                                       @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/transaction")
POST    /api/transaction/create                                         @controllers.TransactionController.create()
POST    /api/transaction/update                                         @controllers.TransactionController.update()
GET     /api/transaction/get/:transactionID                             @controllers.TransactionController.retrieveById(transactionID:Int)
GET     /api/transaction/list                                           @controllers.TransactionController.retrieveAll()
GET     /api/transaction/listByOperation/:operationID                   @controllers.TransactionController.retrieveByOperationId(operationID:Long)

# Customer API
GET     /api-docs/api/customer                                       @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/customer")
GET     /api/customer/getByPhone/:phone                              @controllers.CustomerController.retrieveByPhone(phone)
GET     /api/customer/getByKYC/:kyc                                  @controllers.CustomerController.retrieveByKYC(kyc)
GET     /api/customer/getByEmail/:email                              @controllers.CustomerController.retrieveByEmail(email)
GET     /api/customer/getByRegistrationDate/:startDate/:endDate      @controllers.CustomerController.retrieveByRegistrationDate(startDate, endDate)
GET     /api/customer/list                                           @controllers.CustomerController.retrieveAll()
POST    /api/customer/update                                         @controllers.CustomerController.update()
POST    /api/customer/create                                         @controllers.CustomerController.create()

# Card API
GET     /api-docs/api/card                                           @pl.matisoft.swagger.ApiHelpController.getResource(path = "/api/card")
GET     /api/card/get/:cardID                                        @controllers.CardController.retrieveById(cardID)
GET     /api/card/getByCustomerID/:customerID                        @controllers.CardController.retrieveByCustomerID(customerID)
GET     /api/card/getByCardType/:cardType                            @controllers.CardController.retrieveByCardType(cardType)
GET     /api/card/getByCardBrand/:cardBrand                          @controllers.CardController.retrieveByCardBrand(cardBrand)
GET     /api/card/list                                               @controllers.CardController.retrieveAll()
POST    /api/card/update                                             @controllers.CardController.update()
POST    /api/card/create                                             @controllers.CardController.create()

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                                        controllers.Assets.at(path="/public", file)
