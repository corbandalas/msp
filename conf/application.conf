# This is the main configuration file for the application.
# ~~~~~
# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="=sq4M2BVVpiTHl7AGiGh]gXvgYAp:NK/]=mEZ69kvWhAm=cJc>kX6N`I/aTWVfBd"

# The application languages
# ~~~~~
application.langs="en"
application.web.host="https://msp.com"

play.mailer {
  host = smtp.gmail.com
  port = 587
  user = noreply@mysafepay.dk
  password = Ddf!34Gsdf
}

play.filters.cors {
  pathPrefixes = ["/some/path"]
  allowedOrigins = ["http://www.example.com"]
  allowedHttpMethods = ["GET", "POST"]
  allowedHttpHeaders = ["Accept"]
  preflightMaxAge = 3 days
}

#database connection settings
database.host=localhost
database.name=msp_db
database.schema=msp_scheme
database.test.schema=test_scheme
database.port=5432
database.username=msp_db
database.password=x13jkw34
database.pool.size=1000

flywayUrl="jdbc:postgresql://"${database.host}":"${database.port}"/"${database.name}
flywayLocations="filesystem:db"

card.provider.vendor=${card.provider.vendor}

api.version=0.1.0
swagger.api.basepath="http://localhost:9000"

#card provider configuration
card.provider.vendor=gps
cache.customer.session.timeout=10
cache.worldpay.session.timeout=30

card-provider-dispatcher {
  fork-join-executor {
    parallelism-min = 50
    parallelism-max = 50
  }
}

play.ws.ssl.protocol = "TLSv1.2"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG
